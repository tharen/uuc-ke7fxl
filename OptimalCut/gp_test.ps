%!PS-Adobe-2.0 EPSF-2.0
%%Title: gp_test.ps
%%Creator: gnuplot 4.0 patchlevel 0
%%CreationDate: Tue Oct  6 00:27:06 2009
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 410 302
%%Orientation: Portrait
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -66 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTw { PL [] 1 setgray } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch {dup 3 get{dup dup 0 get findfont exch 1 get scalefont
     setfont 6 get stringwidth pop add} {pop} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R MFshow } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R MFshow } def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R MFshow } def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Times-Italic) findfont 200 scalefont setfont
1.000 UL
LTb
1020 600 M
63 0 V
5777 0 R
-63 0 V
stroke
900 600 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 984 M
63 0 V
5777 0 R
-63 0 V
stroke
900 984 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-0.8)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1368 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1368 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-0.6)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 1752 M
63 0 V
5777 0 R
-63 0 V
stroke
900 1752 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-0.4)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2136 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2136 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-0.2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2520 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2520 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 2904 M
63 0 V
5777 0 R
-63 0 V
stroke
900 2904 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0.2)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3288 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3288 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0.4)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 3672 M
63 0 V
5777 0 R
-63 0 V
stroke
900 3672 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0.6)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4056 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4056 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0.8)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 4440 M
63 0 V
5777 0 R
-63 0 V
stroke
900 4440 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 1)]
] -66.7 MRshow
grestore
1.000 UL
LTb
1020 600 M
0 63 V
0 3777 R
0 -63 V
stroke
1020 400 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-10)]
] -66.7 MCshow
grestore
1.000 UL
LTb
2480 600 M
0 63 V
0 3777 R
0 -63 V
stroke
2480 400 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (-5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
3940 600 M
0 63 V
0 3777 R
0 -63 V
stroke
3940 400 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 0)]
] -66.7 MCshow
grestore
1.000 UL
LTb
5400 600 M
0 63 V
0 3777 R
0 -63 V
stroke
5400 400 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 5)]
] -66.7 MCshow
grestore
1.000 UL
LTb
6860 600 M
0 63 V
0 3777 R
0 -63 V
stroke
6860 400 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 ( 10)]
] -66.7 MCshow
grestore
1.000 UL
LTb
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
LTb
200 2520 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Times-Italic) 200.0 0.0 true true 0 (y)]
] -66.7 MCshow
grestore
grestore
LTb
3940 100 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (x)]
] -66.7 MCshow
grestore
LTb
3940 4740 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (New title)]
] -66.7 MCshow
grestore
1.000 UP
1.000 UP
1.000 UL
LT1
LTb
5957 4277 M
gsave 0 setgray
[ [(Times-Italic) 200.0 0.0 true true 0 (cos\(0.5*x)]
[(Times-Italic) 160.0 100.0 true true 0 (2)]
[(Times-Italic) 200.0 0.0 true true 0 (\))]
] -86.7 MRshow
grestore
LT1
6077 4277 M
543 0 V
-5600 96 R
59 -3082 V
59 329 V
59 2801 V
59 -2218 V
1315 776 L
59 2916 V
59 109 V
1492 921 L
59 705 V
59 2645 V
59 -1000 V
1728 768 L
59 861 V
59 2493 V
59 -327 V
59 -2454 V
59 -560 V
59 2068 V
59 1574 V
59 -1017 V
59 -2129 V
59 -604 V
59 1479 V
59 1833 V
59 359 V
59 -1305 V
59 -1704 V
59 -735 V
59 652 V
59 1449 V
59 1287 V
59 451 V
59 -485 V
59 -1071 V
59 -1149 V
59 -823 V
59 -309 V
59 183 V
59 529 V
59 692 V
59 699 V
59 603 V
59 462 V
59 316 V
59 192 V
59 102 V
59 44 V
59 14 V
59 2 V
58 0 V
59 -2 V
59 -14 V
59 -44 V
59 -102 V
59 -192 V
59 -316 V
59 -462 V
59 -603 V
59 -699 V
59 -692 V
59 -529 V
59 -183 V
59 309 V
59 823 V
59 1149 V
59 1071 V
59 485 V
59 -451 V
59 -1287 V
59 -1449 V
59 -652 V
59 735 V
59 1704 V
59 1305 V
59 -359 V
59 -1833 V
5562 673 L
59 604 V
59 2129 V
59 1017 V
59 -1574 V
5857 781 L
59 560 V
59 2454 V
59 327 V
59 -2493 V
59 -861 V
59 2503 V
59 1000 V
59 -2645 V
59 -705 V
59 2880 V
59 -109 V
6565 776 L
59 1427 V
59 2218 V
59 -2801 V
59 -329 V
59 3082 V
1020 4373 Crs
1079 1291 Crs
1138 1620 Crs
1197 4421 Crs
1256 2203 Crs
1315 776 Crs
1374 3692 Crs
1433 3801 Crs
1492 921 Crs
1551 1626 Crs
1610 4271 Crs
1669 3271 Crs
1728 768 Crs
1787 1629 Crs
1846 4122 Crs
1905 3795 Crs
1964 1341 Crs
2023 781 Crs
2082 2849 Crs
2141 4423 Crs
2200 3406 Crs
2259 1277 Crs
2318 673 Crs
2377 2152 Crs
2436 3985 Crs
2495 4344 Crs
2554 3039 Crs
2613 1335 Crs
2672 600 Crs
2731 1252 Crs
2790 2701 Crs
2849 3988 Crs
2908 4439 Crs
2967 3954 Crs
3026 2883 Crs
3085 1734 Crs
3144 911 Crs
3203 602 Crs
3262 785 Crs
3321 1314 Crs
3380 2006 Crs
3439 2705 Crs
3498 3308 Crs
3557 3770 Crs
3616 4086 Crs
3675 4278 Crs
3734 4380 Crs
3793 4424 Crs
3852 4438 Crs
3911 4440 Crs
3969 4440 Crs
4028 4438 Crs
4087 4424 Crs
4146 4380 Crs
4205 4278 Crs
4264 4086 Crs
4323 3770 Crs
4382 3308 Crs
4441 2705 Crs
4500 2006 Crs
4559 1314 Crs
4618 785 Crs
4677 602 Crs
4736 911 Crs
4795 1734 Crs
4854 2883 Crs
4913 3954 Crs
4972 4439 Crs
5031 3988 Crs
5090 2701 Crs
5149 1252 Crs
5208 600 Crs
5267 1335 Crs
5326 3039 Crs
5385 4344 Crs
5444 3985 Crs
5503 2152 Crs
5562 673 Crs
5621 1277 Crs
5680 3406 Crs
5739 4423 Crs
5798 2849 Crs
5857 781 Crs
5916 1341 Crs
5975 3795 Crs
6034 4122 Crs
6093 1629 Crs
6152 768 Crs
6211 3271 Crs
6270 4271 Crs
6329 1626 Crs
6388 921 Crs
6447 3801 Crs
6506 3692 Crs
6565 776 Crs
6624 2203 Crs
6683 4421 Crs
6742 1620 Crs
6801 1291 Crs
6860 4373 Crs
6348 4277 Crs
1.000 UL
LTb
1020 600 M
5840 0 V
0 3840 V
-5840 0 V
0 -3840 V
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Times-Italic
